
- name: Add Docker repository key
  apt_key:
    id: "{{ apt_key_sig }}"
    url: "{{ apt_key_url }}"
    state: present
  register: add_repository_key
  ignore_errors: true

- name: Alternative | Add Docker repository key
  shell: "curl -sSL {{ apt_key_url }} | sudo apt-key add -"
  when: add_repository_key|failed

- name: Add Docker repository and update apt cache
  apt_repository:
    repo: "{{ apt_repository }}"
    update_cache: yes
    state: present

- name: Install (or update) docker package
  apt:
    name: "{{ docker_pkg_name }}"
    state: "{{ 'latest' if update_docker_package else 'present' }}"
    update_cache: yes
    cache_valid_time: "{{ docker_apt_cache_valid_time }}"

- name: Set docker daemon options
  copy:
    content: "DOCKER_OPTS=\"{{ docker_opts.rstrip('\n') }}\""
    dest: /etc/default/docker
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload docker
  when: docker_opts != ""

- name: Set extra daemon options
  replace:
    regexp: "DOCKER_OPTS=\""
    replace: "DOCKER_OPTS=\"{{ docker_extra_opts.rstrip('\n') }} "
    dest: /etc/default/docker
  notify:
    - Reload docker
  when: docker_extra_opts != "" and consul_server_ip is defined

# We must install pip via apt before we can use the pip module below
- name: Install pip, python-dev package with apt
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: "{{ docker_apt_cache_valid_time }}"
  with_items:
    - python-dev
    - python-pip

- name: Configure Locale
  shell: "sudo sh -c \'echo \"LANG=en_US.UTF-8\nLC_ALL=en_US.UTF-8\" > /etc/default/locale\'
          && export LC_ALL=en_US.UTF-8"

# Install specific version
- name: Upgrade latest pip, setuptools, docker-py and docker-compose with pip
  pip:
    name: "{{ item.name }}"
    state: present
    version: "{{ item.version }}"
  with_items:
    - { name: pip, version: "{{ pip_version_pip }}" }
    - { name: setuptools, version: "{{ pip_version_setuptools }}" }
    - { name: docker-py, version: "{{ pip_version_docker_py }}" }
    - { name: docker-compose, version: "{{ pip_version_docker_compose }}" }

 # can potentially create new users!
- name: Add users to the docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  with_items: "{{docker_group_members}}"
  when: docker_group_members is defined

- name: Start docker
  service:
    name: docker
    state: restarted
